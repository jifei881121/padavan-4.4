#修改TNAME: K2P 中的K2P为你需要编译的型号，注意名称要与configs/templates/目录下的名字相同
name: Build JDCLOUD-RE-SP-01B

on: 
  release:
    types: [published]
  push:
    tags:
    - 'v*'
  #  branches: 
  #    - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
    - name: Clone source code
      env:
        KERNEL: 4.4
      run: |
        if [ $KERNEL = "4.4" ] ; then
        git clone --depth=1 https://github.com/jifei881121/padavan-4.4.git /opt/padavan
        else
        git clone --depth=1 https://github.com/meisreallyba/padavan-4.4.git /opt/padavan
        fi
        cd /opt/padavan/toolchain-mipsel
        sudo ./dl_toolchain.sh
        mkdir -p /opt/images/
    - name: Build Firmware
      env:
        TNAME: JDCLOUD-RE-SP-01B
        KERNEL: 4.4
      run: |
        cd /opt/padavan/trunk
        cp -f configs/templates/$TNAME.config .config
        sudo ./build_firmware_modify $TNAME 0
        sudo mv -f images/*.trx /opt/images/
        
        # 上传打包后内容到artifact
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}
          path: /opt/images/
          retention-days: 1  # 设置保留 artifact 天数
    # 创建release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release-${{ github.ref }}
          draft: false
          prerelease: false
      # 将软件包打成zip压缩包
      - run: zip  ${{ github.ref_name }}.zip /opt/images/*
      # 将zip压缩包上传至release
      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path:  ${{ github.ref_name }}.zip
          asset_name:  ${{ github.ref_name }}.zip
          asset_content_type: application/zip
